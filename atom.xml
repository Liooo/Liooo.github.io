<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ryo's Engieer Blog]]></title>
  <link href="http://liooo.github.io/atom.xml" rel="self"/>
  <link href="http://liooo.github.io/"/>
  <updated>2014-11-23T07:08:13+09:00</updated>
  <id>http://liooo.github.io/</id>
  <author>
    <name><![CDATA[Ryo Yamada]]></name>
    <email><![CDATA[ryoyamada3@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Building Multiple File Upload Form in Rails Way]]></title>
    <link href="http://liooo.github.io/blog/2014/11/22/building-multiple-file-upload-form-in-rails-way/"/>
    <updated>2014-11-22T16:32:05+09:00</updated>
    <id>http://liooo.github.io/blog/2014/11/22/building-multiple-file-upload-form-in-rails-way</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#background">Background</a></li>
  <li><a href="#gems">Gems</a></li>
  <li><a href="#instruction">Instruction</a>    <ul>
      <li><a href="#scaffolding-the-app">Scaffolding the App</a></li>
      <li><a href="#form-for-hasmany-relation-with-cocoon">Form for has_many relation with Cocoon</a></li>
      <li><a href="#showing-thumbnail">Showing Thumbnail</a></li>
      <li><a href="#redisplaying-thumbnail-on-validation-fail">Redisplaying thumbnail on validation fail</a></li>
      <li><a href="#rejecting-empty-photo-field">Rejecting Empty Photo Field</a></li>
    </ul>
  </li>
</ul>

<h3 id="background">Background</h3>
<p>Here I’ll introduce a way to build a file upload form that</p>

<ol>
  <li>uploads multiple files at a time</li>
  <li>can add/remove file input fields dynamically</li>
  <li>shows preview when an image file is chosen</li>
  <li>if any errors exist in the form, the file inputs memorize and redisplay the selected file</li>
  <li>can remove existing files</li>
  <li>use plain html form, NOT xhr (therefore, no file drag and drop feature)</li>
</ol>

<p>See <a href="https://github.com/Liooo/carrierwave-cocoon-file-upload-app-demo">Github Repository</a> for the complete app.</p>

<!-- more -->

<h3 id="gems">Gems</h3>

<h4 class="no_toc" id="carrierwave">CarrierWave</h4>

<p>Use <a href="https://github.com/carrierwaveuploader/carrierwave">CarrierWave</a> to handle files in the app.</p>

<p>You could also consider using the following for file handling.</p>

<ul>
  <li><a href="https://github.com/markevans/dragonfly">Dragonfly</a></li>
  <li><a href="https://github.com/thoughtbot/paperclip">Paperclip</a> (doesn’t support <a href="https://github.com/carrierwaveuploader/carrierwave#making-uploads-work-across-form-redisplays">file cache</a> )</li>
</ul>

<h4 class="no_toc" id="cocoon">Cocoon</h4>

<p><a href="https://github.com/nathanvda/cocoon">Cocoon</a> helps generating multiple input fields for has_many relation models.</p>

<h3 id="instruction">Instruction</h3>

<h4 id="scaffolding-the-app">Scaffolding the App</h4>

<p>New up a rails app, and add the following lines to Gemfile, then run <code>bundle install</code>.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">gem</span> <span class="s2">&quot;carrierwave&quot;</span>
</span><span class="line"><span class="n">gem</span> <span class="s2">&quot;cocoon&quot;</span>
</span><span class="line">
</span><span class="line"><span class="n">gem</span> <span class="s2">&quot;slim&quot;</span>
</span><span class="line"><span class="n">gem</span> <span class="s2">&quot;slim-rails&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Create models and carrierwave uploaders.</p>

<pre><code>rails g scaffold user name:string
rails g model user_photo photo:string user_id:integer
rails g uploader photo
rake db:migrate
</code></pre>

<p>And make models looks like followoing.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>app/models/*.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">    <span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class="line">      <span class="n">has_many</span> <span class="ss">:user_photos</span>
</span><span class="line">      <span class="n">validates_presence_of</span> <span class="ss">:name</span>
</span><span class="line">      <span class="n">accepts_nested_attributes_for</span> <span class="ss">:user_photos</span><span class="p">,</span> <span class="ss">allow_destroy</span><span class="p">:</span> <span class="kp">true</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">    <span class="k">class</span> <span class="nc">UserPhoto</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class="line">      <span class="n">belongs_to</span> <span class="ss">:user</span>
</span><span class="line">      <span class="n">mount_uploader</span> <span class="ss">:photo</span><span class="p">,</span> <span class="no">PhotoUploader</span>
</span><span class="line">    <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="form-for-hasmany-relation-with-cocoon">Form for has_many relation with Cocoon</h4>

<p>Add the following lines inside <code>form_for</code> block in the default user form.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>app/views/users/_form.html.slim</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="slim"><span class="line"><span class="p">=</span> <span class="n">form_for</span> <span class="vi">@user</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class="line">
</span><span class="line">  <span class="cp">/ ..</span>
</span><span class="line">  <span class="p">=</span> <span class="n">f</span><span class="o">.</span><span class="n">fields_for</span> <span class="ss">:user_photos</span> <span class="k">do</span> <span class="o">|</span><span class="n">photo</span><span class="o">|</span>
</span><span class="line">    <span class="p">=</span> <span class="n">render</span> <span class="s1">&#39;user_photo_fields&#39;</span><span class="p">,</span> <span class="ss">f</span><span class="p">:</span> <span class="n">photo</span>
</span><span class="line">  <span class="nc">.links</span><span class="p">=</span> <span class="n">link_to_add_association</span> <span class="s1">&#39;add a photo&#39;</span><span class="p">,</span> <span class="n">f</span><span class="p">,</span> <span class="ss">:user_photos</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Then, create the following partial file.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>app/views/users/_user_photo_fields.slim.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="slim"><span class="line"><span class="nc">.nested-fields</span>
</span><span class="line">  <span class="p">=</span> <span class="n">f</span><span class="o">.</span><span class="n">file_field</span> <span class="ss">:photo</span>
</span><span class="line">  <span class="p">=</span> <span class="n">link_to_remove_association</span> <span class="s2">&quot;remove&quot;</span><span class="p">,</span> <span class="n">f</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>link_to_add_association</code> and <code>link_to_remove_association</code> are helper methods provided by cocoon that generates link tags. These links dynamically adds/removes nested form for has_many relation model.
<code>_user_photo_fields.html.slim</code> is the template included as nested form.  You have to add the following line to application.js to take advantage of cocoon. (Also, you shouldn’t change <code>div.nested-fields</code> surrounding <code>link_to_remove_association</code>, because cocoon is depending on it)</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>app/assets/js/application.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="js"><span class="line"><span class="c1">//= require cocoon</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>tweak strong_parameter so that the backend accepts parameters for user_photos.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>app/controllers/users_controller.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">def</span> <span class="nf">user_params</span>
</span><span class="line">  <span class="n">params</span><span class="o">.</span><span class="n">require</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span><span class="o">.</span><span class="n">permit</span><span class="p">(</span><span class="ss">:name</span><span class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">user_photos_attributes</span><span class="p">:</span> <span class="o">[</span><span class="ss">:id</span><span class="p">,</span> <span class="ss">:photo</span><span class="p">,</span> <span class="ss">:_destroy</span><span class="o">]</span><span class="p">)</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Now open up a browser and go to /users/new, you can at least create a user with photos through the form.</p>

<h4 id="showing-thumbnail">Showing Thumbnail</h4>

<p>Currently if you go to /users/:id, only name of the user is shown.
To show the thumbnails of the photos, add the following line to show.html.slim.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>app/views/users/show.html.slim</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="slim"><span class="line"><span class="p">-</span> <span class="vi">@user</span><span class="o">.</span><span class="n">user_photos</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">user_photo</span><span class="o">|</span>
</span><span class="line">  <span class="nc">.thumb</span><span class="p">=</span> <span class="n">image_tag</span> <span class="n">user_photo</span><span class="o">.</span><span class="n">photo</span><span class="o">.</span><span class="n">url</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>and some styles.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>app/assets/stylesheets/users.css.scss</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="scss"><span class="line"><span class="nc">.thumb</span><span class="p">{</span>
</span><span class="line">  <span class="nt">img</span><span class="p">{</span>
</span><span class="line">    <span class="na">width</span><span class="o">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
</span><span class="line">    <span class="na">height</span><span class="o">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>It’d be nice if you can also see thumbnails right after choosing photos.
Add some javascript and style change to achieve this.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>app/assets/javascripts/users.js.coffee</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
</pre></td><td class="code"><pre><code class="coffee"><span class="line"><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s">&#39;page:change&#39;</span><span class="p">,</span> <span class="nf">()-&gt;</span>
</span><span class="line">  <span class="nv">onAddFile = </span><span class="nf">(event) -&gt;</span>
</span><span class="line">    <span class="nv">file = </span><span class="nx">event</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">files</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class="line">    <span class="nv">url = </span><span class="nx">URL</span><span class="p">.</span><span class="nx">createObjectURL</span><span class="p">(</span><span class="nx">file</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">    <span class="nv">thumbContainer = </span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">parent</span><span class="p">().</span><span class="nx">next</span><span class="p">(</span><span class="s">&#39;td&#39;</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s">&#39;.thumb&#39;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">    <span class="k">if</span> <span class="nx">thumbContainer</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s">&#39;img&#39;</span><span class="p">).</span><span class="nx">length</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class="line">      <span class="nx">thumbContainer</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s">&#39;&lt;img src=&quot;&#39;</span> <span class="o">+</span> <span class="nx">url</span> <span class="o">+</span> <span class="s">&#39;&quot; /&gt;&#39;</span><span class="p">)</span>
</span><span class="line">    <span class="k">else</span>
</span><span class="line">      <span class="nx">thumbContainer</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s">&#39;img&#39;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s">&#39;src&#39;</span><span class="p">,</span> <span class="nx">url</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">  <span class="c1"># for redisplayed file inputs and file inputs in edit page</span>
</span><span class="line">  <span class="nx">$</span><span class="p">(</span><span class="s">&#39;input[type=file]&#39;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="nf">()-&gt;</span>
</span><span class="line">      <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">change</span><span class="p">(</span><span class="nx">onAddFile</span><span class="p">)</span>
</span><span class="line">  <span class="p">)</span>
</span><span class="line">
</span><span class="line">  <span class="c1"># register event handler when new cocoon partial is inserted from link_to_add_association link</span>
</span><span class="line">  <span class="nx">$</span><span class="p">(</span><span class="s">&#39;body&#39;</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s">&#39;cocoon:after-insert&#39;</span><span class="p">,</span> <span class="nf">(e, addedPartial) -&gt;</span>
</span><span class="line">    <span class="nx">$</span><span class="p">(</span><span class="s">&#39;input[type=file]&#39;</span><span class="p">,</span> <span class="nx">addedPartial</span><span class="p">).</span><span class="nx">change</span><span class="p">(</span><span class="nx">onAddFile</span><span class="p">)</span>
</span><span class="line">  <span class="p">)</span>
</span><span class="line">
</span><span class="line">  <span class="c1"># tell cocoon where to insert partial</span>
</span><span class="line">  <span class="nx">$</span><span class="p">(</span><span class="s">&#39;a.add_fields&#39;</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s">&#39;association-insertion-method&#39;</span><span class="p">,</span> <span class="s">&#39;append&#39;</span><span class="p">)</span>
</span><span class="line">  <span class="nx">$</span><span class="p">(</span><span class="s">&#39;a.add_fields&#39;</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s">&quot;association-insertion-node&quot;</span><span class="p">,</span> <span class="s">&#39;table.user-photo-form tbody&#39;</span><span class="p">)</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Pretiffy the nested form a bit by putting them in table tag. </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>app/views/users/_form.html.slim</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="slim"><span class="line"><span class="p">=</span> <span class="n">form_for</span> <span class="vi">@user</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class="line">  <span class="cp">/..</span>
</span><span class="line">  <span class="nt">table</span><span class="nc">.user-photo-form</span>
</span><span class="line">    <span class="nt">thead</span>
</span><span class="line">      <span class="nt">tr</span>
</span><span class="line">        <span class="nt">td</span> input
</span><span class="line">        <span class="nt">td</span> preview
</span><span class="line">        <span class="nt">td</span> remove
</span><span class="line">    <span class="nt">tbody</span>
</span><span class="line">      <span class="p">=</span> <span class="n">f</span><span class="o">.</span><span class="n">fields_for</span> <span class="ss">:user_photos</span> <span class="k">do</span> <span class="o">|</span><span class="n">photo</span><span class="o">|</span>
</span><span class="line">        <span class="p">=</span> <span class="n">render</span> <span class="s1">&#39;user_photo_fields&#39;</span><span class="p">,</span> <span class="ss">f</span><span class="p">:</span> <span class="n">photo</span>
</span><span class="line">  <span class="nc">.links</span><span class="p">=</span> <span class="n">link_to_add_association</span> <span class="s1">&#39;add a photo&#39;</span><span class="p">,</span> <span class="n">f</span><span class="p">,</span> <span class="ss">:user_photos</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Wrap nested forms in tr.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>app/views/users/_user_photo_fields.html.slim</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="slim"><span class="line"><span class="nt">tr</span><span class="nc">.nested-fields</span>
</span><span class="line">  <span class="nt">td</span><span class="p">=</span> <span class="n">f</span><span class="o">.</span><span class="n">file_field</span> <span class="ss">:photo</span>
</span><span class="line">  <span class="nt">td</span><span class="nc">.thumb</span>
</span><span class="line">  <span class="nt">td</span><span class="p">=</span> <span class="n">link_to_remove_association</span> <span class="s2">&quot;remove&quot;</span><span class="p">,</span> <span class="n">f</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Add some styles.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>app/assets/stylesheets/users.css.scss</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="scss"><span class="line"><span class="nc">.user-photo-form</span><span class="p">{</span>
</span><span class="line">    <span class="nt">td</span><span class="p">{</span>
</span><span class="line">        <span class="na">width</span><span class="o">:</span> <span class="mi">300</span><span class="kt">px</span><span class="p">;</span>
</span><span class="line">        <span class="na">padding</span><span class="o">:</span> <span class="mi">10</span><span class="kt">px</span> <span class="mi">20</span><span class="kt">px</span> <span class="mi">10</span><span class="kt">px</span> <span class="mi">20</span><span class="kt">px</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="redisplaying-thumbnail-on-validation-fail">Redisplaying thumbnail on validation fail</h4>

<p>Now select some files and submit the form with name field being blank. The validation fails, and you see the selected files are competely lost in the redisplayed form. 
Carrierwave has a nice feature for handling this situation. It not only lets us keep track of the uploaded files, but also caches them so that we don’t have to send the same ones on every validation fail.</p>

<p>What we need to do is just to addd a hidden field for cached photo as #4 below shows. Then CarrierWave automatically associates the model with cached file and saves when validation passes. (if you select an another new file, this cache will be ignored)</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>app/views/users/_user_photo_fields.html.slim</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="slim"><span class="line"><span class="nt">tr</span><span class="nc">.nested-fields</span>
</span><span class="line">  <span class="nt">td</span><span class="p"> </span>
</span><span class="line">    <span class="p">=</span> <span class="n">f</span><span class="o">.</span><span class="n">file_field</span> <span class="ss">:photo</span>
</span><span class="line">    <span class="p">=</span> <span class="n">f</span><span class="o">.</span><span class="n">hidden_field</span> <span class="ss">:photo_cache</span><span class="p">,</span> <span class="ss">:value</span> <span class="o">=&gt;</span> <span class="n">f</span><span class="o">.</span><span class="n">object</span><span class="o">.</span><span class="n">photo_cache</span>
</span><span class="line">  <span class="nt">td</span><span class="nc">.thumb</span>
</span><span class="line">    <span class="p">-</span> <span class="k">if</span> <span class="n">f</span><span class="o">.</span><span class="n">object</span><span class="o">.</span><span class="n">photo</span><span class="o">.</span><span class="n">url</span><span class="o">.</span><span class="n">present?</span>
</span><span class="line">      <span class="p">=</span> <span class="n">image_tag</span> <span class="n">f</span><span class="o">.</span><span class="n">object</span><span class="o">.</span><span class="n">photo</span><span class="o">.</span><span class="n">url</span>
</span><span class="line">  <span class="nt">td</span><span class="p">=</span> <span class="n">link_to_remove_association</span> <span class="s2">&quot;remove&quot;</span><span class="p">,</span> <span class="n">f</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Add photo_cache to strong_parameter</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>app/controllers/users_controller.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">def</span> <span class="nf">user_params</span>
</span><span class="line">  <span class="n">params</span><span class="o">.</span><span class="n">require</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span><span class="o">.</span><span class="n">permit</span><span class="p">(</span><span class="ss">:name</span><span class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">user_photos_attributes</span><span class="p">:</span> <span class="o">[</span><span class="ss">:id</span><span class="p">,</span> <span class="ss">:photo</span><span class="p">,</span> <span class="ss">:photo_cache</span><span class="p">,</span> <span class="ss">:_destroy</span><span class="o">]</span><span class="p">)</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="rejecting-empty-photo-field">Rejecting Empty Photo Field</h4>

<p>If you fill in the name and click ‘add a photo’ button several times and post the form, you’ll see models with no photo are created. To avoid this, use <code>reject_if</code> option. </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>app/models/user.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class="line">  <span class="n">has_many</span> <span class="ss">:user_photos</span>
</span><span class="line">  <span class="n">validates_presence_of</span> <span class="ss">:name</span>
</span><span class="line">  <span class="n">accepts_nested_attributes_for</span> <span class="ss">:user_photos</span><span class="p">,</span> <span class="p">\</span>
</span><span class="line">    <span class="ss">reject_if</span><span class="p">:</span> <span class="nb">proc</span><span class="p">{</span> <span class="o">|</span><span class="n">param</span><span class="o">|</span> <span class="n">param</span><span class="o">[</span><span class="ss">:photo</span><span class="o">].</span><span class="n">blank?</span> <span class="o">&amp;&amp;</span> <span class="n">param</span><span class="o">[</span><span class="ss">:photo_cache</span><span class="o">].</span><span class="n">blank?</span> <span class="o">&amp;&amp;</span> <span class="n">param</span><span class="o">[</span><span class="ss">:id</span><span class="o">].</span><span class="n">blank?</span> <span class="p">},</span> <span class="p">\</span>
</span><span class="line">    <span class="ss">allow_destroy</span><span class="p">:</span> <span class="kp">true</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>You could also add a validator on the UserPhoto model to prevent creation of empty file model.</p>
]]></content>
  </entry>
  
</feed>
